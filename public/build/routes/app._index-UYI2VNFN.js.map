{
  "version": 3,
  "sources": ["../../../app/routes/app._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app._index.jsx\");\n  import.meta.hot.lastModified = \"1692173753995.6719\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link, useNavigate } from \"@remix-run/react\";\nimport { authenticate } from \"../shopify.server\";\nimport { Card, EmptyState, Layout, Page, IndexTable, Thumbnail, Text, Icon, HorizontalStack, Tooltip } from \"@shopify/polaris\";\nimport { getQRCodes } from \"../models/QRCode.server\";\nimport { DiamondAlertMajor, ImageMajor } from \"@shopify/polaris-icons\";\nexport async function loader({\n  request\n}) {\n  console.log('day ne cha noi');\n  const {\n    admin,\n    session\n  } = await authenticate.admin(request);\n  const QRCodes = await getQRCodes(session.shop, admin.graphql);\n  return json({\n    QRCodes\n  });\n}\nexport default function Index() {\n  _s();\n  const {\n    QRCodes\n  } = useLoaderData();\n  const navigate = useNavigate();\n  function truncate(str) {\n    const n = 25;\n    return str.length > n ? str.substr(0, n - 1) + \"\u2026\" : str;\n  }\n  const emptyMarkup = QRCodes.length ? null : <EmptyState heading=\"Create unique QR codes for your product\" action={{\n    content: \"Create QR code\",\n    onAction: () => navigate(\"qrcodes/new\")\n  }} image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\">\n      <p>Allow customers to scan codes and buy products using their phones.</p>\n    </EmptyState>;\n  const qrCodesMarkup = QRCodes.length ? <IndexTable resourceName={{\n    singular: \"QR code\",\n    plural: \"QR codes\"\n  }} itemCount={QRCodes.length} headings={[{\n    title: \"Thumbnail\",\n    hidden: true\n  }, {\n    title: \"Title\"\n  }, {\n    title: \"Product\"\n  }, {\n    title: \"Date created\"\n  }, {\n    title: \"Scans\"\n  }]} selectable={false}>\n      {QRCodes.map(({\n      id,\n      title,\n      productImage,\n      productTitle,\n      productDeleted,\n      createdAt,\n      scans\n    }) => {\n      return <IndexTable.Row id={id} key={id} position={id}>\n              <IndexTable.Cell>\n                <Thumbnail source={productImage || ImageMajor} alt={\"product image or placeholder\"} size=\"small\" />\n              </IndexTable.Cell>\n              <IndexTable.Cell>\n                <Link to={`qrcodes/${id}`}>{truncate(title)}</Link>\n              </IndexTable.Cell>\n              <IndexTable.Cell>\n                {productDeleted ? <HorizontalStack align=\"start\" gap={\"2\"}>\n                    <Tooltip content=\"product has been deleted\">\n                      <span style={{\n                width: \"20px\"\n              }}>\n                        <Icon source={DiamondAlertMajor} color=\"critical\" />\n                      </span>\n                    </Tooltip>\n                    <Text color={productDeleted && \"critical\"} as=\"span\">\n                      {truncate(productTitle)}\n                    </Text>\n                  </HorizontalStack> : truncate(productTitle)}\n              </IndexTable.Cell>\n              <IndexTable.Cell>\n                {new Date(createdAt).toDateString()}\n              </IndexTable.Cell>\n              <IndexTable.Cell>{scans}</IndexTable.Cell>\n            </IndexTable.Row>;\n    })}\n    </IndexTable> : null;\n  return <Page>\n      <ui-title-bar title=\"QR codes\">\n        <button variant=\"primary\" onClick={() => navigate(\"/app/qrcodes/new\")}>\n          Create QR code\n        </button>\n      </ui-title-bar>\n      <Layout>\n        <Layout.Section>\n          <Card padding={\"0\"}>\n            {emptyMarkup}\n            {qrCodesMarkup}\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>;\n}\n_s(Index, \"iw+6t4EJAkg7VyPW12/kKhDvJjE=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,qBAA6B;AAE7B,oBAA2B;AA6BrB;AArDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAsBe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,WAAW,YAAY;AAC7B,WAAS,SAAS,KAAK;AACrB,UAAM,IAAI;AACV,WAAO,IAAI,SAAS,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,WAAM;AAAA,EACvD;AACA,QAAM,cAAc,QAAQ,SAAS,OAAO,mDAAC,cAAW,SAAQ,2CAA0C,QAAQ;AAAA,IAChH,SAAS;AAAA,IACT,UAAU,MAAM,SAAS,aAAa;AAAA,EACxC,GAAG,OAAM,+EACL,6DAAC,OAAE,kFAAH;AAAA;AAAA;AAAA;AAAA,SAAqE,KAJ7B;AAAA;AAAA;AAAA;AAAA,SAK1C;AACF,QAAM,gBAAgB,QAAQ,SAAS,mDAAC,cAAW,cAAc;AAAA,IAC/D,UAAU;AAAA,IACV,QAAQ;AAAA,EACV,GAAG,WAAW,QAAQ,QAAQ,UAAU,CAAC;AAAA,IACvC,OAAO;AAAA,IACP,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,EACT,CAAC,GAAG,YAAY,OACX,kBAAQ,IAAI,CAAC;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,MAAM;AACJ,WAAO,mDAAC,WAAW,KAAX,EAAe,IAAiB,UAAU,IAC1C;AAAA,yDAAC,WAAW,MAAX,EACC,6DAAC,aAAU,QAAQ,gBAAgB,eAAY,KAAK,gCAAgC,MAAK,WAAzF;AAAA;AAAA;AAAA;AAAA,aAAiG,KADnG;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,WAAW,MAAX,EACC,6DAAC,QAAK,IAAI,WAAW,MAAO,mBAAS,KAAK,KAA1C;AAAA;AAAA;AAAA;AAAA,aAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,WAAW,MAAX,EACE,2BAAiB,mDAAC,mBAAgB,OAAM,SAAQ,KAAK,KAClD;AAAA,2DAAC,WAAQ,SAAQ,4BACf,6DAAC,UAAK,OAAO;AAAA,UACnB,OAAO;AAAA,QACT,GACU,6DAAC,QAAK,QAAQ,sBAAmB,OAAM,cAAvC;AAAA;AAAA;AAAA;AAAA,eAAkD,KAHpD;AAAA;AAAA;AAAA;AAAA,eAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QACA,mDAAC,QAAK,OAAO,kBAAkB,YAAY,IAAG,QAC3C,mBAAS,YAAY,KADxB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAVc;AAAA;AAAA;AAAA;AAAA,aAWhB,IAAqB,SAAS,YAAY,KAZ9C;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MACA,mDAAC,WAAW,MAAX,EACE,cAAI,KAAK,SAAS,EAAE,aAAa,KADpC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,WAAW,MAAX,EAAiB,mBAAlB;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,SAxBI,IAA7B;AAAA;AAAA;AAAA;AAAA,WAyBD;AAAA,EACR,CAAC,KAlDoC;AAAA;AAAA;AAAA;AAAA,SAmDrC,IAAgB;AAClB,SAAO,mDAAC,QACJ;AAAA,uDAAC,kBAAa,OAAM,YAClB,6DAAC,YAAO,SAAQ,WAAU,SAAS,MAAM,SAAS,kBAAkB,GAAG,8BAAvE;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,UACC,6DAAC,OAAO,SAAP,EACC,6DAAC,QAAK,SAAS,KACZ;AAAA;AAAA,MACA;AAAA,SAFH;AAAA;AAAA;AAAA;AAAA,WAGA,KAJF;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAbG;AAAA;AAAA;AAAA;AAAA,SAcL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
