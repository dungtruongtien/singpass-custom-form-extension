{
  "version": 3,
  "sources": ["../../../app/routes/test-login.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/test-login.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/test-login.jsx\");\n  import.meta.hot.lastModified = \"1693390111893.8113\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport db from \"../db.server\";\nimport { getQRCodeImage } from \"~/models/QRCode.server\";\nexport const loader = async ({\n  params\n}) => {\n  return json({\n    title: \"\",\n    image: \"\"\n  });\n};\nexport default function QRCode() {\n  _s();\n  const {\n    image,\n    title\n  } = useLoaderData();\n  return <>\n      <h1>{title}</h1>\n      <img src={image} alt={`QR Code for product`} />\n    </>;\n}\n_s(QRCode, \"Pc8wZ1cmzE22SL/cn0plXIeKhfA=\", false, function () {\n  return [useLoaderData];\n});\n_c = QRCode;\nvar _c;\n$RefreshReg$(_c, \"QRCode\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAmBZ;AAvCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAgBe,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,sFACH;AAAA,uDAAC,QAAI,mBAAL;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,IACX,mDAAC,SAAI,KAAK,OAAO,KAAK,yBAAtB;AAAA;AAAA;AAAA;AAAA,WAA6C;AAAA,OAF1C;AAAA;AAAA;AAAA;AAAA,SAGL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
